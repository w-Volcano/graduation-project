(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{400:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"c-中的枚举"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c-中的枚举"}},[t._v("#")]),t._v(" C++中的枚举")]),t._v(" "),a("p",[t._v("​\tEnum是一种用户定义的数据类型，在这种类型中，我们为一个变量指定了一组值，并且该变量只能从一小组可能的值中取一个。我们使用enum关键字来定义一个枚举。")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("direction")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("East"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" West"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" North"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" South"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("dir"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("​\t这里枚举名称是direction，只能取四个指定值中的一个，声明最后的dir是一个枚举变量。")]),t._v(" "),a("p",[t._v("​\t让我们举个简单的例子来理解这个问题。")]),t._v(" "),a("p",[t._v("​\t这里我将值West分配给了枚举变量dir，当我显示dir的值时，它显示为1，这是因为默认情况下，值是从0开始递增的顺序，也就是说东为0，西为1，北为2，南为3。")]),t._v(" "),a("h2",{attrs:{id:"简单的枚举示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简单的枚举示例"}},[t._v("#")]),t._v(" 简单的枚举示例")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("includeusing")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("direction")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("East"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" West"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" North"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" South"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("dir"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   dir "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" West"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   cout"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("dir"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"另一种声明枚举变量的方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#另一种声明枚举变量的方式"}},[t._v("#")]),t._v(" 另一种声明枚举变量的方式")]),t._v(" "),a("p",[t._v("​\t在上面的例子中我们已经看到，我在枚举声明时声明了枚举变量dir，还有一种方法可以声明枚举变量。")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("direction")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("East"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" West"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" North"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" South"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   direction dir"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   dir "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" South"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n   cout"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("dir"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   \n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("输出:")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n")])])]),a("h2",{attrs:{id:"为什么在c-中使用枚举"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么在c-中使用枚举"}},[t._v("#")]),t._v(" 为什么在C++中使用枚举？")]),t._v(" "),a("p",[t._v("​\t现在我们了解了什么是枚举，以及如何在程序中使用它们，让我们讨论一下为什么要使用它们。")]),t._v(" "),a("p",[t._v("​\t枚举只有在我们期望变量有一个可能的值时才会使用, 例如, 我们有一个存放方向的dir变量. 由于我们有四个方向，这个变量可以取四个值中的任何一个，如果我们试图给这个变量分配一个其他的随机值，就会抛出一个编译错误。这样就增加了编译时的检查，避免了因传递无效常量而发生的错误。")]),t._v(" "),a("p",[t._v("​\t另一个经常使用它们的重要地方是"),a("RouterLink",{attrs:{to:"/contents/在C++中的switch case语句与示例.html"}},[t._v("switch case语句")]),t._v("，在这里，case块所期望的所有值都可以定义在一个enum中。这样我们就可以确保我们在switch括号中传递的枚举变量没有接受任何不该接受的随机值。")],1),t._v(" "),a("h2",{attrs:{id:"如何改变enum的默认值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何改变enum的默认值"}},[t._v("#")]),t._v(" 如何改变Enum的默认值")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("direction")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("East"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" West"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" North"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("33")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" South"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("44")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   direction dir"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   dir "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" South"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   cout"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("dir"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("输出：")])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("44")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);