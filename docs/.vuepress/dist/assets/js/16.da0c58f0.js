(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{365:function(s,t,a){s.exports=a.p+"assets/img/break_statement_cpp.95291973.jpg"},395:function(s,t,a){"use strict";a.r(t);var e=a(42),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"在c-中的break语句与示例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在c-中的break语句与示例"}},[s._v("#")]),s._v(" 在C++中的break语句与示例")]),s._v(" "),e("p",[s._v("在以下两种情况下使用"),e("strong",[s._v("break语句")]),s._v("。")]),s._v(" "),e("p",[s._v("a) 使用break语句瞬间从循环中出来。只要在循环中遇到break语句，控件就会直接从循环中出来，终止循环。它与if语句一起使用，只要在循环中使用（见下面的例子），所以它只在特定条件下发生。")]),s._v(" "),e("p",[s._v("b) 在case块之后的switch case控制结构中使用。一般来说，在switch case中的所有case后面都有break语句，以避免后续case（见下面的例子）的执行。只要在switch-case块中遇到它，控制就会从switch-case体中出来。")]),s._v(" "),e("h4",{attrs:{id:"break-语句的语法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#break-语句的语法"}},[s._v("#")]),s._v(" break 语句的语法")]),s._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),e("h2",{attrs:{id:"break-语句流程图"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#break-语句流程图"}},[s._v("#")]),s._v(" break 语句流程图")]),s._v(" "),e("p",[e("img",{attrs:{src:a(365),alt:"C++ break statement"}})]),s._v(" "),e("h2",{attrs:{id:"例子-在while循环中使用break语句"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#例子-在while循环中使用break语句"}},[s._v("#")]),s._v(" 例子：在while循环中使用break语句")]),s._v(" "),e("p",[s._v("​\t在下面的例子中，我们有一个从10运行到200的while循环，但是由于我们有一个break语句，当循环计数器变量值达到12时，会遇到一个break语句，所以循环会被终止，控制跳转到循环体之后的程序中的下一条语句。")]),s._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token expression"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" std"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" num "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("200")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      cout"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Value of num is: "')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("num"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n         "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      num"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" \n   cout"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hey, I\'m out of the loop"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),e("p",[e("strong",[s._v("输出：")])]),s._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[s._v("Value of num is"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\nValue of num is"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v("\nValue of num is"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v("\nHey"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" I"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("'")]),s._v("m out of the loop\n")])])]),e("h2",{attrs:{id:"例子-for循环中的break语句"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#例子-for循环中的break语句"}},[s._v("#")]),s._v(" 例子：for循环中的break语句")]),s._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token expression"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" std"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" var"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("var "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("200")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" var"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" var "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      cout"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"var: "')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("var"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("var"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("197")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n         "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n   "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n   cout"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hey, I\'m out of the loop"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),e("p",[e("strong",[s._v("输出：")])]),s._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[s._v("var"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("200")]),s._v("\nvar"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("199")]),s._v("\nvar"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("198")]),s._v("\nvar"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("197")]),s._v("\nHey"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" I"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("'")]),s._v("m out of the loop\n")])])]),e("h2",{attrs:{id:"例子-switch-case中的break语句"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#例子-switch-case中的break语句"}},[s._v("#")]),s._v(" 例子：Switch Case中的break语句")]),s._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token expression"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" std"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" num"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" cout"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Case 1 "')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" cout"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Case 2 "')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" cout"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Case 3 "')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" cout"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Default "')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n   cout"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hey, I\'m out of the switch case"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),e("p",[e("strong",[s._v("输出：")])]),s._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[s._v("Case "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" \nHey"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" I"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("'")]),s._v("m out of the "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v("\n")])])]),e("p",[s._v("​\t在这个例子中，我们在每个Case块之后都有break语句，这是因为如果我们没有break语句，那么后续的case块也会执行。同样的程序在没有break的情况下，输出的结果是：")]),s._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[s._v("Case "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\nCase "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\nDefault\nHey"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" I"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("'")]),s._v("m out of the "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v("\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);