(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{378:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"第一个c-程序-hello-world"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一个c-程序-hello-world"}},[t._v("#")]),t._v(" 第一个C++程序 - Hello World")]),t._v(" "),a("p",[t._v("​\t在本指南中，我们将编写并理解"),a("strong",[t._v("C++编程中的第一个程序")]),t._v('。我们正在编写一个简单的C++程序，打印 "Hello World!"信息。让我们先看看这个程序，然后我们将详细讨论它的每一个部分。')]),t._v(" "),a("h2",{attrs:{id:"用c-编写的hello-world程序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用c-编写的hello-world程序"}},[t._v("#")]),t._v(" 用C++编写的Hello World程序")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n* 多行\n* 注释\n*/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//单行注释")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这是程序开始执行的地方")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在屏幕上显示Hello World!")]),t._v("\n   cout"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("输出：")])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("Hello World"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n")])])]),a("p",[t._v("让我们来讨论一下上述程序的每一个部分。")]),t._v(" "),a("p",[a("strong",[t._v("1. 注释")]),t._v("--在上述程序中可以看到两种类型的注释")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这是一个单行注释")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 这是一个多行注释，\n*  适合长注释。\n*/")]),t._v("\n")])])]),a("p",[t._v("​\t注释，顾名思义就是程序员在开发代码时写的文字。注释不会对你的程序逻辑造成任何影响，你可以在注释中写任何你想写的东西，但它应该与代码相关，并且有一定的意义，这样当别人查看你的代码时，他只要看了你的注释就应该明白你在代码中做了什么。")]),t._v(" "),a("p",[t._v("​\t例如：")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 此函数将两个整数相加，\n * 并将结果作为一个整数返回。\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" num1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" num2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" num1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("num2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("​\t现在如果有人看了我的评论，他或她只要看了我的评论就能明白我在那里做了什么。这提高了你的代码的可读性，当你和你的团队伙伴一起做一个项目时，这就成为必不可少的方面。")]),t._v(" "),a("p",[a("strong",[t._v("2. "),a("code",[t._v("#include<iostream>")])]),t._v("  – 这个语句告诉编译器包含iostream文件。这个文件包含了我们在程序中可以使用的预先定义的输入/输出函数。")]),t._v(" "),a("p",[a("strong",[t._v("3. "),a("code",[t._v("using namespace std;")])]),t._v(" – 命名空间就像一个区域，在这里我们有函数、变量等，它们的范围被限制在那个特定的区域内。这里std是一个命名空间的名称，这告诉编译器要对该特定区域的所有变量、函数等进行查找。我在这里不详细讨论这个问题，因为它可能会让你感到困惑。我已经在一个单独的教程中用实例介绍了这个话题。只要按照教程中给定的顺序去做，你就可以了。")]),t._v(" "),a("p",[a("strong",[t._v("4. "),a("code",[t._v("int main()")])]),t._v(" – 顾名思义这就是我们程序的主函数，程序的执行就是从这个函数开始的，这里的int是返回类型，它向编译器表明这个函数将返回一个整数值。这也是我们在main函数的最后有一个return 0语句的主要原因。")]),t._v(" "),a("p",[a("strong",[t._v("5. "),a("code",[t._v("cout << “Hello World!”;")])]),t._v(" – "),a("code",[t._v("cout")]),t._v("对象属于iostream文件，这个对象的目的是在屏幕上显示双引号之间的内容。这个对象也可以在屏幕上显示变量的值（不用担心，我们会在以后的教程中看到）。")]),t._v(" "),a("p",[a("strong",[t._v("6. "),a("code",[t._v("return 0;")])]),t._v(" – 该语句从main()函数返回值0，表示main函数执行成功。值1代表执行失败。")])])}),[],!1,null,null,null);s.default=e.exports}}]);